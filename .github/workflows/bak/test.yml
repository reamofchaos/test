name: Pull Request Workflow

on:
  pull_request:
    branches: [ master ]  # 仅当 Pull Request 目标分支是 main 时触发

jobs:
  build-and-test:
#    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 运行器
    runs-on: macos-latest  # 使用最新的 Ubuntu 运行器
#    runs-on: windows-latest  # 使用最新的 Ubuntu 运行器

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # 检出代码

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '8'  # Specify the JDK version (e.g., 8, 11, 17)
          cache: "maven"
#          distribution: "temurin"
          distribution: ${{ runner.os == 'macOS' && 'liberica' || 'temurin' }}

#      - if: runner.os == 'macOS'
#        name: Install Docker on MacOS
#        shell: bash
#        run: |
#          brew update
#          brew install qemu
#          brew install docker
#          brew install colima
#          LIMACTL_PATH=$(brew --prefix)/bin/limactl
#          sudo curl -L -o $LIMACTL_PATH https://github.com/mikekazakov/lima-nohvf/raw/master/limactl && sudo chmod +x $LIMACTL_PATH
#          colima start --network-address --arch arm64 --vm-type=qemu
#          docker --version
#
#      - name: Verify Docker installation
#        run: docker --version

#      - name: Download Milvus Installation Script
#        run: |
#          # Download the Milvus standalone embed script
#          curl -sfL https://raw.githubusercontent.com/milvus-io/milvus/master/scripts/standalone_embed.sh -o standalone_embed.sh
#          # Make the script executable
#          chmod +x standalone_embed.sh

#      - name: Start Milvus
#        run: |
#          # Start Milvus using the standalone embed script
#          ./standalone_embed.sh start


#      - name: Setup Milvus DB
#        uses: ./.github/workflows/actions/setup/vectordb
#
#      - name: Run Milvus DB
#        uses: ./.github/workflows/actions/service/vectordb
#        with:
#          stop: false
#          clean: false
#          start: true
#          ports: 19530 19531 19532
#
#      - name: Verify Milvus is running
#        run: |
#          # List running Docker containers to verify Milvus is running
#          docker ps
#          # Wait for Milvus to fully start
#          sleep 2
#          # Print logs to verify
#          docker logs $(docker ps -q --filter "name=milvus")

#      - name: Install Docker Compose
#        run: |
#          DOCKER_COMPOSE_VERSION=1.29.2
#          sudo curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#          sudo chmod +x /usr/local/bin/docker-compose
#
#      - name: Verify Docker Compose version
#        run: |
#          docker-compose --version

#      - name: Install Docker Compose
#        shell: pwsh
#        run: |
#          $ErrorActionPreference = "Stop"
#          $dockerComposeVersion = "1.29.2"  # 根据需要更改版本号
#          $dockerComposePath = "${{ github.workspace }}\docker-compose.exe"  # 使用临时目录
#
#          # 下载 Docker Compose
#          Invoke-WebRequest -Uri "https://github.com/docker/compose/releases/download/$dockerComposeVersion/docker-compose-Windows-x86_64.exe" -OutFile $dockerComposePath
#
#      - name: Verify Docker Compose version
#        shell: pwsh
#        run: |
#          & "${{ github.workspace }}\docker-compose.exe" --version

#      - name: Install Docker Compose
#        run: |
#          $dockerComposeVersion = "1.29.2"
#          sudo curl -L "https://github.com/docker/compose/releases/download/$dockerComposeVersion/docker-compose-darwin-x86_64" -o /usr/local/bin/docker-compose
#          sudo chmod +x /usr/local/bin/docker-compose
#
#      - name: Verify Docker Compose version
#        run: docker-compose --version


      - name: Install Homebrew
        run: |
            if ! command -v brew &> /dev/null; then  
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"  
            fi  

            - name: Install Docker
              run: |
                brew install --cask docker  

            - name: Install Docker Compose
              run: |
                dockerComposeVersion="1.29.2"  # 可以根据需要更改为最新版本  
                # 下载 Docker Compose 到 /usr/local/bin  
                sudo curl -L "https://github.com/docker/compose/releases/download/${dockerComposeVersion}/docker-compose-darwin-x86_64" -o /usr/local/bin/docker-compose  
                # 添加可执行权限  
                sudo chmod +x /usr/local/bin/docker-compose  

            - name: Start Docker
              run: |
                # 启动 Docker 服务  
                open -a Docker  
                # 等待 Docker 启动  
                sleep 30  

            - name: Verify Docker and Docker Compose installation
              run: |
                # 验证 Docker 是否安装成功  
                docker --version  
                # 验证 Docker Compose 是否安装成功  
                docker-compose --version  

            - name: Run Docker Compose
              run: |
                # 运行 Docker Compose 的示例  
                # 确保有 docker-compose.yml 文件在工作区  
                docker-compose up -d  

      - name: Run tests
        run: mvn test  # 运行测试

